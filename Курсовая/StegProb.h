#pragma once
/**
* @file StegProb.h
* @author Рясков.С.С.
* @version 1.0
* @brief Описание класса StegProb
* @date 01.06.2021
* @copyright ИБСТ ПГУ
*/
#include <iostream>
#include <fstream>
#include <string>
using namespace std;
/**@brief Класс скрытия и извлечения текста методом стеганографии двойных пробелов.
*@warning Работает только с англоязычными сообщениями
*/
class StegProb
{
private:
/**
@brief Ключ, отвечающий за выбор режима работы программы(обычный или инверсированный).
@details При использовании обычного режима единица будет скрываться двумя пробелами, а ноль - одним.
 * В инверсированном режиме наоборот: ноль скрывается двумя пробелами, а единица - одним.
*/
    int mode;
public:
///@brief Конструктор по умолчанию запрещён.
    StegProb()=delete;
/**
 * @brief Конструктор установкой режима работы программы.
 * @param ch - параметр присваивающийся полю mode.
 */
    StegProb(const int& ch);
/**
 * @brief Метод, отвечающий за скрытие информации в файле.
 * @details После получения на вход двух файлов происходит проверки их совместимости, то есть количество пробелов в файле контейнере 
 * должно быть равно количеству бит в скрываемом сообщении.Если один из файлов оказывается пустым, то выбрасывается исключение.
 * Если файлы не проходят проверку, то возбуждается исключение invalid_argument.
 * После этого происходит скрытие информации в режиме работы,указанном пользователем в начале, в тексте взятом из файла-контейнера.
 * Когда завершится скрытие сообщения, программа выведет название файла со скрытым текстом. 
 * @param text_path - путь к файлу, в котором находится информация для скрытия.
 * @param cont_path - путь к файлу-контейнеру. В этом файле должен находиться текст с удовлетворяющим количеством пробелов.
 * 
 */
    void hideInfo(const string&  text_path,const string& cont_path);
/**
 * @brief Метод, отвечающий за извлечение информации из файла.
 * @details После получения на вход двух файлов создаётся копия извлёченного текста из файла для определения количества байт извлекаемой информации.
 * Если файл со скрытой информацией оказывается пустым или имеет двойные пробелы в тексте, то выбрасывается исключение.
 * На основе режима работы и количества байт происходит извленчение информации. После этого информация сохраняется в файле, указанном пользователем.
 * @param cont_path - путь к файлу, в котором находится скрытая информация.
 * @param hidden_path - путь к файлу, в котором будет сохранена извлеченная информация.
 */
    void getInfo(const string& cont_path, const string& hidden_path);
/**
 * @brief Метод, отвечающий за получение справки о программе.
 */
    void getHelp();
/**
 * @brief Метод, проверяющий на существование указанного файла. Если файл не проходит проверку, то возбуждается исключение ifstream::failure.
 * @param path - путь к файлу, который надо проверить.
 */
    void CheckFile(const string& path);
/**
 * @brief Метод, проверяющий на корректность ключ, введённый пользователем. В случае ошибки возбуждается исключение invalid_argument.
 */
    bool CheckKey();
};
