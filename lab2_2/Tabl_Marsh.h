/**
* @file Tabl_Marsh.h
* @author Рясков.С.С.
* @version 1.0
* @brief Описание класса Tabl_Marsh
* @date 29.05.2021
* @copyright ИБСТ ПГУ
*/
#pragma once
#include <string>
#include <locale>
using namespace std;
///@brief Класс зашифрования и расшифрования текста алгоритмом табличной перестановки.
class Tabl_Marsh
{
private:
    ///@brief Ключ, отвечающий за количество столбцов в таблице.
    int key;
    ///@brief Алфавит для английских символов.
    wstring EngAlph=L"ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    ///@brief Алфавит для русских символов.
    wstring RusAlph=L"АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
public:
    ///@brief Конструктор по умолчанию.
    Tabl_Marsh(){};
    /**
 * @brief Конструктор с установкой ключа.
 * @param skey - ключ, вводимый пользователем.
 */
    Tabl_Marsh(int& skey);
        /**
     * @brief Метод зашифрорвания табличной перестановкой.
     * @param open_text - текст, который необходимо зашифровать.
     * @details Полученный на вход текст, проверяется на пустоту, если он не проходит проверку, то выбрасывается исключение.
     * На основе ключа создается таблица, в которую будут записываться символы текста. 
     * После записи текста в таблицу, эти же символы выписываются по правилу табличной перестановки.
     * @return Текст зашифрованный методом табличной перестановки.
     */
    wstring encrypt(const wstring& open_text);
        /**
     * @brief Метод расшифрования текста, зашифрованного табличной перестановкой.
     * @param cipher_text - текст, который необходимо расшифровать.
     * @details Полученный на вход текст, проверяется на пустоту, если он не проходит проверку, то выбрасывается исключение.
     * На основе ключа создается таблица, в которую будут записываться символы текста. 
     * После записи текста в таблицу, эти же символы выписываются по правилу табличной перестановки для расшифрования.
     * @return Расшифрованный текст.
     */
    wstring decrypt(const wstring& cipher_text);
        /**
     * @brief Проверка ключа.
     * @param skey - ключ, подлежащий проверке.
     * @details Данный метод проверяет правильность ввода ключа.
     * Исключения выбрасываются если: был введен символ не являющийся цифрой, число не является положительным целочисленным.
     */
    void Check(int skey);
};
